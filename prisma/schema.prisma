datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  events    Event[]   @relation("EventCreator")
  bookings  Booking[]
  reviews   Review[]
  password  String
}

model Event {
  id          String    @id @default(cuid())
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  createdBy   User      @relation("EventCreator", fields: [userId], references: [id])
  userId      String
  venue       Venue     @relation(fields: [venueId], references: [id])
  venueId     String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  seats       Seat[]
  bookings    Booking[]
  reviews     Review[]
  status      EventStatus @default(DRAFT)
  price       Decimal
  image       String

  @@index([userId])
  @@index([venueId])
  @@index([categoryId])
}

model Seat {
  id        String    @id @default(cuid())
  number    String
  type      SeatType  @default(REGULAR)
  price     Decimal
  status    SeatStatus @default(AVAILABLE)
  event     Event     @relation(fields: [eventId], references: [id])
  eventId   String
  booking   Booking?

  @@index([eventId])
}

model Booking {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  event     Event     @relation(fields: [eventId], references: [id])
  eventId   String
  seat      Seat      @relation(fields: [seatId], references: [id])
  seatId    String    @unique
  status    BookingStatus @default(PENDING)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([userId])
  @@index([eventId])
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  events      Event[]
}

model Venue {
  id          String    @id @default(cuid())
  name        String
  address     String
  capacity    Int
  events      Event[]
  image       String
  // details     String
  // location     String
}

model Review {
  id        String    @id @default(cuid())
  rating    Int       @default(0)
  comment   String?
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  event     Event     @relation(fields: [eventId], references: [id])
  eventId   String
  createdAt DateTime  @default(now())

  @@index([userId])
  @@index([eventId])
}

enum Role {
  ADMIN
  USER
}

enum EventStatus {
  DRAFT
  PUBLISHED
  CANCELLED
  COMPLETED
}

enum SeatType {
  VIP
  REGULAR
  ECONOMY
}

enum SeatStatus {
  AVAILABLE
  RESERVED
  SOLD
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
}